这个项目是springboot+jpa+poi技术,因为创建仓库时忘记添加readme文件,所以在这个txt文件中描述这个项目的功能和用处:

一.背景:
	目前市面主流的poi技术方案:
		数据量一般的情况:
			1.  HSSF --> 主要针对 excel2003版 (excel2003版 存储数据量较小)
			2.  XSSF --> 主要针对 excel2007版 (excel2007版 存储数据量大,比起2003版有非常强的优势,所以这个项目采用的是2007版本)
		百万级别的数据量:
			1.用户模式:  指的就是 数据量一般情况下的两种方案;(消耗内存,效率低,内存中也存储不了百万级别的数据,会抛出OOM异常);
			2.事件模式: 事件驱动器机制,底层采用sax方案解析xml.  读取一行数据后就会立即销毁这一行数据,所以内存永远够用;多用于百万级别数据量的报表导入.
			3.SXSSF: 高效的报表导出功能,多用于百万数据量级别的报表导出.(不支持模板样式的报表导出).

二.功能:

	前提注意事项:
		 1.导出导入报表中各有两个情况,除过 导入报表中的事件驱动模式(针对于百万级别数据的报表导入) 不使用自定义的注解,其余三种情况都需要用到自定义的注解和对应工具类.
		 2.需要导入导出的数据应该被封装成一个对象或者一个对象的部分属性.相当于excel表格中的每一行数据都是一个对象.
		 
	1).导出报表:   从数据库中条件查询出列表,然后在页面中可以下载.
		A: 采用模板的方式导出报表.
			实现步骤:
				1.制作带有样式的模板,并且复制到项目resources目录下自定义的文件夹中.
				2.根据模板中的抬头(比如 "姓名,年龄,工资,学历...")在自己封装好的实体类的对应属性上添加自定义注解  @ExcelAttribute(sort = 0), @ExcelAttribute(sort = 2)...
				3.编写service+dao层中条件查询的方法.
				4.接下来的步骤 请模仿: /poi/export/withTemplate
		B: 不采用模板的方式导出报表.(基于SXSSF,可以导出百万级别的数据)
			实现步骤:
				1.根据模板中的抬头(比如 "姓名,年龄,工资,学历...")在自己封装好的实体类的对应属性上添加自定义注解  @ExcelAttribute(sort = 0), @ExcelAttribute(sort = 2)...
				2. 请模仿: /poi/export/withoutTemplate
	
	
	2).导入报表:  解析从前端传过来的excel文件.(解析的后续操作一般是将数据保存到数据库中)
		A. 使用报表导入工具类解析普通级别的数据excel报表.(将前端传过来的报表文件解析成对应的对象集合)
			实现步骤:
				1.根据模板中的抬头(比如 "姓名,年龄,工资,学历...")在自己封装好的实体类的对应属性上添加自定义注解  @ExcelAttribute(sort = 0), @ExcelAttribute(sort = 2)...
				2.请模仿: /poi/import/importGeneralData
		B. 使用事件模型解析百万数据excel报表
			实现步骤:
				1.编写事件驱动器: (SheetHandler就是自定义的事件驱动器)
					SheetHandler implements XSSFSheetXMLHandler.SheetContentsHandler 
				2.请模仿: /poi/import/bigData
	